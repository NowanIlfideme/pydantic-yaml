name: "CI/CD Main Workflow"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created
env:
  RELEASE_PYTHON_VERSION: "3.10"

jobs:
  ci-matrix:
    name: "CI Matrix"
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.12"
        deps:
          - dev
          - dev,docs
        lib-pydantic:
          - "2.0"
          - "2.9"
    uses: ./.github/workflows/ci-single.yml
    with:
      python-version: ${{ matrix.python-version }}
      pydantic-install: >
        "pydantic~=${{ matrix.lib-pydantic }}"
      lib-install: >
        -e ".[${{ matrix.deps }}]"
    secrets: inherit

  publish-testpypi:
    name: "Publish to TestPyPI"
    if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
    needs:
      - ci-matrix
    runs-on: ubuntu-latest
    environment: "publish-pypi"
    permissions:
      id-token: write # required for trusted publishing
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.RELEASE_PYTHON_VERSION }}
      - name: Install build/upload dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Install Package
        run: |
          pip install -e ".[dev,docs]"
      - name: Build
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    name: "Publish to PyPI"
    if: ${{ github.event_name == 'release' && github.event.action == 'created' }}
    needs:
      - "ci-matrix"
      - "publish-testpypi"
    runs-on: ubuntu-latest
    environment: "publish-pypi"
    permissions:
      id-token: write # required for trusted publishing
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.RELEASE_PYTHON_VERSION }}
      - name: Install build/upload dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Install Package
        run: |
          pip install -e ".[dev,docs]"
      - name: Build
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

# This workflows will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Build & Upload package

on:
  release:
    types: [created]

jobs:
  ci-check:
    name: "Pre-publishing CI Checks"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true  # we want CI to immediately fail for releases
      matrix:
        python-version:
          - "3.10"
          - "3.12"
        deps:
          - dev
          - dev,docs
        lib-pydantic:
          - "1.10.22"  # last supported versions of Pydantic v1
          - "2.5.0"  # first version to support python 3.12
          - "2.11.5"
        lib-ruamel:
          - "NOTSET"
          - "0.17.40"
          - "0.18.11"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Package with dependencies ${{ matrix.deps }} and other libs
        run: |
          if [ ${{ matrix.lib-ruamel }} != "NOTSET" ]
          then
            pip install "ruamel.yaml~=${{ matrix.lib-ruamel }}"
          fi
          pip install "pydantic~=${{ matrix.lib-pydantic }}"
          pip install -e ".[${{ matrix.deps }}]"
      - name: Lint with ruff
        run: |
          ruff check .
      - name: Test with pytest
        run: |
          pytest
      - name: Test with mypy
        run: |
          mypy -p pydantic_yaml

  publish-pypi:
    name: "Publish to PyPI"
    needs:
      - "ci-check"
    runs-on: ubuntu-latest
    environment: "publish-pypi"
    permissions:
      id-token: write # required for trusted publishing
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install build/upload dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Install Package
        run: |
          pip install -e ".[dev,docs]"
      - name: Build
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

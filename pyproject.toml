[build-system]
requires = ["setuptools >= 61.0.0", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "pydantic_yaml"
description = "YAML reading/writing for Pydantic models."
readme = "README.md"
requires-python = ">=3.10"
dynamic = ["version"]
keywords = ["pydantic", "yaml"]
license = { file = "LICENSE" }
authors = [{ name = "NowanIlfideme", email = "git@nowan.dev" }]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Operating System :: OS Independent",
]
dependencies = [
    "pydantic>=1.8",               # including pydantic>=2.0.0!
    "ruamel.yaml>=0.17.0,<0.19.0", # recommended ~=0.18.x
    "typing_extensions>=4.5.0",
]
urls = { github = "https://github.com/NowanIlfideme/pydantic-yaml", docs = "https://pydantic-yaml.readthedocs.io/en/latest/" }

[project.optional-dependencies]
dev = [
    "setuptools>=61.0.0",
    "setuptools-scm[toml]>=6.2",
    "pre-commit==4.2.0",
    "ruff==0.11.11",
    "mypy==1.15.0",
    "pytest==8.3.5",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "pymdown-extensions",
    "pygments",
    # types
    "types-setuptools",
]

[project.scripts]

[tool.setuptools]
zip-safe = false
package-dir = { "" = "src" }
packages = ["pydantic_yaml"]

[tool.setuptools.package-data]

[tool.setuptools.dynamic]
version = { attr = "pydantic_yaml.version.__version__" }


[tool.ruff]
# NOTE: target-version is same as requires-python
# See: https://astral.sh/blog/ruff-v0.10.0
line-length = 105
src = ["src"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle
    "F",  # pyflakes
    "UP", # pyupgrade
    "D",  # pydocstyle
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
testpaths = ["src/test"]

[tool.mypy]
files = 'src/pydantic_yaml/**/*.py'
warn_unused_configs = true

[[tool.mypy.overrides]]
module = 'ruamel.*'
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = 'setuptools_scm.*'
ignore_missing_imports = true
